@page "/Cars"
@inject HttpClient Http

<h1 class="text-center mb-3">List of Cars</h1>
<a class="btn btn-primary mb-3" href="/Cars/Create">Add Car</a>

@if (carDetails == null)
{
  <p><em>Loading...</em></p>
}
else
{
  <table class="table">
    <thead>
      <tr>
        <th>ID</th>
        <th>Brand</th>
        <th>Description</th>
        <th>Price</th>
        <th>Damage</th>
        <th>Created date</th>
        <th>Edited date</th>
        <th>Action</th>
      </tr>
    </thead>
    <tbody>
      @foreach (var car in carDetails)
      {
        <tr>
          <th>@car.Id</th>
          <th>@car.CarBrand</th>
          <th>@car.CarDescription</th>
          <th>@car.CarPrice €</th>
          <td>
            <input type="checkbox" checked="@car.Damage" disabled />
          </td>
          <th>@car.CreatedDate</th>
          <th>@car.EditedDate</th>
          <td class="white-space:nowrap">
            <a class="btn btn-primary btn-sm" href="/CarDetails/Edit/@car.Id">Edit</a>
            <a class="btn btn-danger btn-sm" href="/CarDetails/Delete/@car.Id">Delete</a>
          </td>
        </tr>
      }
    </tbody>
  </table>
}

@code {
  private List<Model.CarDetails>? carDetails;

  protected override async Task OnInitializedAsync()
  {

    try
    {
      carDetails = await Http.GetFromJsonAsync<List<Model.CarDetails>>("https://localhost:7122/api/CarDetailes");
      Console.WriteLine($"Cars fetched: {carDetails?.Count ?? 0}");
    }
    catch (Exception ex)
    {
      Console.WriteLine($"Error fetching cars: {ex.Message}");
    }
  }
}
